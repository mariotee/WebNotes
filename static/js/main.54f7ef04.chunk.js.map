{"version":3,"sources":["pages/Main/style.module.css","pages/Login/style.module.css","registerServiceWorker.js","pages/Login/index.js","pages/Login/login.js","api/constants.js","api/entry.js","components/CreatePost/index.js","components/CreatePost/createpost.js","components/Note/index.js","components/Note/note.js","pages/Main/index.js","pages/Main/main.js","api/user.js","containers/App.js","index.js","components/CreatePost/style.module.css","components/Note/style.module.css"],"names":["module","exports","main","header","body","postbutton","footer","root","loginbuttons","label","showpass","input","checkbox","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","page","passwordVisible","name","passwordEntered","togglePasswordVisibility","_this","setState","onChange","event","Object","defineProperty","target","value","_this2","this","react_default","a","createElement","className","styles","style","display","props","loading","type","onKeyPress","key","onSubmit","username","password","onClick","color","createAccount","backgroundColor","creating","padding","placeholder","onPost","newUsername","email","newEmail","newPassword","React","Component","LAMBDA_URL","getAllNotes","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","post","sub","method","byFilter","sent","abrupt","data","stop","apply","arguments","createNote","_ref3","_callee3","postObj","_context3","_x2","deleteNoteById","_ref5","_callee5","idStr","_context5","id","_x5","component","head","inputlabel","onKey","newNote","rows","maxLength","charcount","concat","length","note","numToPaddedString","num","String","timestamp","date","Date","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","tod","parseDate","user","onDelete","_id","characterCount","sortData","sort","b","toLowerCase","priority","onFieldChange","original","objectSpread","onEditTableRow","element","onConfirmEdit","onDeleteNote","deleted","confirm","entryApi","errorMessage","removeNoteFromState","postKeyPress","_callee2","_context2","addNoteToState","map","index","components_Note","components_CreatePost","logout","getUser","newUser","get","_x","createUser","_ref2","sortByTimestamp","App","loggedIn","loadingUser","creatingAccount","loginError","postError","notes","toggleCreate","submitCreate","req","userApi","submitLogin","_data","onLogout","prevState","newData","push","now","getTime","filter","alert","pages_Main","Login","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","select"],"mappings":"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","file":"static/js/main.54f7ef04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__DToDI\",\"header\":\"style_header__1zib9\",\"body\":\"style_body__3PdrF\",\"postbutton\":\"style_postbutton__37eAy\",\"footer\":\"style_footer__1ubEb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1C2X8\",\"loginbuttons\":\"style_loginbuttons__3XBzF\",\"label\":\"style_label__3MMYW\",\"showpass\":\"style_showpass__2Hya8\",\"input\":\"style_input__1AAqb\",\"checkbox\":\"style_checkbox__3jzPL\"};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\"\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === \"[::1]\"\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          //console.log(\n          //\"This web app is being served cache-first by a service \"\n          //+ \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          //)\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              //console.log(\"New content is available; please refresh.\")\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              //console.log(\"Content is cached for offline use.\")\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {      \n      //console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      //console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import page from \"./login.js\"\nexport default page\n","import React from \"react\"\nimport styles from \"./style.module.css\"\n\nexport default class LoginPage extends React.Component {\n  state = {\n    passwordVisible: false,\n    name: \"\",\n    passwordEntered: \"\",\n  }\n\n  togglePasswordVisibility = () => {\n    this.setState({\n      passwordVisible: !this.state.passwordVisible,\n    })\n  }\n\n  onChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  render() {    \n    return <div className={styles.root}>\n      <div className={styles.header}>\n        <h2>Web Notes</h2>\n        <span style={{ display: this.props.loading ? \"block\" : \"none\" }}>\n          hang on a moment. signing you in...\n        </span>\n      </div>\n      <div>\n        <label className={styles.label}>User</label>\n        <input\n          className={styles.input}\n          name=\"name\"\n          value={this.state.name}\n          onChange={(event) => this.onChange(event)}\n        />\n        <br />\n        <label className={styles.label}>Password</label>\n        <input\n          className={styles.input}\n          name=\"passwordEntered\"\n          value={this.state.passwordEntered}\n          type={this.state.passwordVisible ? \"text\" : \"password\"}\n          onChange={(event) => this.onChange(event)}\n          onKeyPress={(event) => {\n            if (event.key === \"Enter\") {\n              this.props.onSubmit({\n                username: this.state.name,\n                password: this.state.passwordEntered,\n              })\n            }\n          }}\n        />\n        <br/>\n        <input\n          className={styles.checkbox}\n          type=\"checkbox\"\n          onClick={() => this.togglePasswordVisibility()}\n        />\n        <span className={styles.showpass}>Show Password</span>\n        <br/>\n        <button\n          className={styles.loginbuttons}\n          color=\"second\"          \n          onClick={() =>\n            this.props.onSubmit({\n              username: this.state.name,\n              password: this.state.passwordEntered,\n            })\n          }\n        >\n          Sign In\n        </button>\n        <br />\n        <button\n          className={styles.loginbuttons}\n          color=\"third\"          \n          onClick={() =>\n            this.props.onSubmit({\n              username: \"GUEST\",\n            })\n          }\n        >\n          Enter As Universal Guest\n        </button>\n        <br />\n        <button\n          className={styles.loginbuttons}\n          color=\"fourth\"\n          onClick={this.props.createAccount}\n        >\n          Create Account\n        </button>\n        <div\n          style={{\n            backgroundColor: \"#f9c9\",\n            display: this.props.creating ? \"block\" : \"none\",\n            padding: \"8px\",\n          }}\n        >\n          <label className={styles.label}>Username</label>\n          <input \n            className={styles.input}\n            name=\"newUsername\" \n            onChange={(event) => this.onChange(event)} \n          />\n          <br />\n          <label className={styles.label}>Email</label>\n          <input\n            className={styles.input}\n            placeholder=\"(optional)\"\n            name=\"newEmail\"\n            onChange={(event) => this.onChange(event)}\n          />\n          <br />\n          <label className={styles.label}>Password</label>\n          <input\n            className={styles.input}\n            name=\"newPassword\"\n            onChange={(event) => this.onChange(event)}\n            onKeyPress={(event) => {\n              if (event.key === \"Enter\") {\n                this.props.onPost({\n                  username: this.state.newUsername,\n                  email: this.state.newEmail,\n                  password: this.state.newPassword,\n                })\n              }\n            }}\n          />\n          <button\n            color=\"second\"\n            className={styles.loginbuttons}\n            onClick={() =>\n              this.props.onPost({\n                username: this.state.newUsername,\n                email: this.state.newEmail,\n                password: this.state.newPassword,\n              })\n            }\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </div>  \n  }\n}","const PROD_URL = \"https://ju48kiggo7.execute-api.us-east-2.amazonaws.com/api\"\r\nconst DEV_URL = \"https://1ztk64k2b4.execute-api.us-east-2.amazonaws.com/test\"\r\nexport const LAMBDA_URL = process.env.NODE_ENV === \"production\" ? PROD_URL : DEV_URL","import axios from \"axios\"\n\nimport {LAMBDA_URL} from \"./constants.js\"\n\nexport const getAllNotes = async () => {\n  let res = await axios.post(LAMBDA_URL, {\n    controller: \"ENTRY\",\n    sub: {\n      method: \"GET\",\n      byFilter: {}\n    }\n  })\n\n  return res.data\n}\n\nexport const getNoteById = async (idStr) => {\n  let res = await axios.post(LAMBDA_URL, {\n    controller : \"ENTRY\",\n    sub: {\n      method: \"GET\",\n      byId: true,\n      id: idStr,\n    }\n  })\n\n  return res.data\n}\n\nexport const createNote = async (postObj) => {\n  let res = await axios.post(LAMBDA_URL, {\n    controller: \"ENTRY\",\n    sub: {\n      method: \"POST\",\n      post: postObj,\n    }\n  })\n  \n  return res.data\n}\n\nexport const updateNoteById = async (idStr, fieldsToUpdate) => {\n  let res = await axios.post(LAMBDA_URL, {\n    controller : \"ENTRY\",\n    sub: {\n      method: \"PUT\",\n      id: idStr,\n      put: fieldsToUpdate,\n    }\n  })\n\n  return res.data\n}  \n\nexport const deleteNoteById = async (idStr) => {\n  let res = await axios.post(LAMBDA_URL, {\n    controller : \"ENTRY\",\n    sub: {\n      method: \"DELETE\",\n      id: idStr,\n    }\n  })\n\n  return res.data\n}","import component from \"./createpost.js\"\nexport default component\n","import React from \"react\"\nimport styles from \"./style.module.css\"\n\nexport default function CreatePost(props) {\n  return <div className={styles.root}>\n    <div className={styles.head}>\n      <label className={styles.inputlabel}>\n        <b>Note</b>\n      </label>\n      <button\n        color=\"third\"\n        className={styles.postbutton}\n        onClick={() => props.onKey({key: \"Enter\",})}\n      >\n        Post Note\n      </button>\n    </div>\n    <textarea\n      className={styles.input}\n      name=\"post\"\n      placeholder={\"hit ENTER to submit\"}\n      value={props.newNote.post}\n      rows={2}\n      maxLength={140}\n      onKeyPress={(event) => {\n        props.onKey(event)\n      }}\n      onChange={(event) => {\n        props.onChange(event)\n      }}\n    />\n    <div className={styles.charcount}>{`${props.newNote.post.length}/140`}</div>\n  </div>  \n}","import note from \"./note.js\"\nexport default note\n","import React from \"react\"\nimport styles from \"./style.module.css\"\n\nexport default function Note(props) {\n  const numToPaddedString = (num) => {\n    return String(num).length < 2 ? \"0\" + num : num\n  }\n\n  const parseDate = (date) => {\n    date = new Date(date)\n    const month = numToPaddedString(date.getMonth() + 1)\n    const day = numToPaddedString(date.getDate())\n    const year = date.getFullYear()\n    let hour = date.getHours()\n    let minute = numToPaddedString(date.getMinutes())\n    let tod = \"AM\"\n    if (hour >= 12) tod = \"PM\"\n    if (hour > 12) hour -= 12\n    if (hour === 0) hour = 12\n\n    if (hour < 10) {\n      hour = `0${hour}`\n    }\n    return `${month}/${day}/${year} ${hour}:${minute} ${tod}`\n  }\n\n  return <div className={styles.root}>\n    <div className={styles.body}>\n      <div className={styles.timestamp}>{parseDate(props.data.timestamp)}</div>\n      <div className={styles.post}>{props.data.post}</div>\n      <div className={styles.footer}>\n        <span className={styles.username}>{props.data.user}</span>\n        <button\n          color=\"fourth\"\n          onClick={() => props.onDelete(props.data._id)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  </div>  \n}","import page from \"./main.js\"\nexport default page\n","import React from \"react\"\nimport styles from \"./style.module.css\"\n\nimport * as entryApi from \"../../api/entry.js\"\n\nimport CreatePost from \"../../components/CreatePost\"\nimport Note from \"../../components/Note\"\n\nexport default class Main extends React.Component {\n  state = {\n    characterCount: 0,\n    newNote: {\n      post: \"\",      \n    },\n  }\n\n  sortData = (data) => {\n    data.sort((a, b) => (a.post.toLowerCase() < b.post.toLowerCase() ? 1 : -1))\n    data.sort((a, b) => (a.priority < b.priority ? -1 : 1))\n  }\n\n  onFieldChange = (event) => {\n    const original = this.state.newNote\n    this.setState({\n      newNote: {\n        ...original,\n        [event.target.name]: event.target.value,\n      },\n    })\n  }\n\n  onEditTableRow = (element) => {}\n\n  onConfirmEdit = (element) => {}\n\n  onDeleteNote = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this note?\")) {\n      let deleted = await entryApi.deleteNoteById(id)\n\n      if (deleted && !deleted.errorMessage) {\n        this.props.removeNoteFromState(deleted)\n      }\n    }\n  }\n\n  postKeyPress = async (event) => {\n    if (event.key === \"Enter\") {      \n      let res = await entryApi.createNote({\n        user: this.props.user,\n        timestamp: new Date(),\n        post: this.state.newNote.post,        \n      })\n\n      if (res && !res.errorMessage) {\n        this.props.addNoteToState(res)\n      }\n\n      this.setState({\n        newNote: {\n          post: \"\",          \n        },\n      })\n    }\n  }\n\n  render() {\n    const {data} = this.props || []\n\n    return <div className={styles.root}>\n      <div className={styles.main}>\n        <div className={styles.header}>\n          Web Notes\n        </div>\n        <div className={styles.body}>\n          {\n            data.length > 0 && data.map((element, index) => {\n              return <Note \n                key={\"note_\"+index} \n                data={element} \n                onDelete={this.onDeleteNote}\n              />\n            })\n          }\n          <CreatePost\n            newNote={this.state.newNote}\n            onChange={this.onFieldChange}\n            onKey={this.postKeyPress}\n          />\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <button          \n          color=\"first\"\n          onClick={this.props.logout}\n        >\n          Logout\n        </button>\n      </div>\n    </div>\n  }\n}","import axios from \"axios\"\nimport {LAMBDA_URL} from \"./constants.js\"\n\nexport const getUser = async (newUser) => {\n  let res = await axios.post(LAMBDA_URL, {\n    controller: \"USER\",\n    sub: {\n      method: \"GET\",\n      get: newUser,\n    }\n  })\n\n  return res.data\n}\n\nexport const createUser = async (postObj) => {\n  let res = await axios.post(LAMBDA_URL, {\n    controller: \"USER\",\n    sub: {\n      method: \"POST\",\n      post: postObj,\n    }\n  })\n\n  return res.data\n}  \n\nexport const updateEmail = async (updateObj) => {\n  let res = await axios.post(LAMBDA_URL, {\n    controller: \"USER\",\n    sub: {\n      method: \"PUT\",\n      put: updateObj,\n    }\n  })\n\n  return res.data\n}  \n\nexport const deleteUser = async (user) => {\n  let res = await axios.post(LAMBDA_URL, {\n    controller: \"USER\",\n    sub: {\n      method: \"DELETE\",\n      delete: user,\n    }\n  })\n\n  return res.data\n}","import React from \"react\"\n//import jscookie from \"js-cookie\"\n\nimport Login from \"../pages/Login\"\nimport Main from \"../pages/Main\"\n\nimport * as userApi from \"../api/user.js\"\nimport * as entryApi from \"../api/entry.js\"\n\n//import {generateToken} from \"../api/utils.js\"\n\n//const tokencookey = \"token_current_user\"\n\nconst sortByTimestamp = (data) => {\n  data.sort((a,b) => a.timestamp > b.timestamp ? -1 : 1)\n}\n\nexport default class App extends React.Component {\n  state = {\n    loggedIn: false,    \n    loadingUser: false,\n    creatingAccount: false,\n    loginError: false,\n    postError: false,\n    notes: [],\n    user: \"anonymous\",\n  }\n\n  // componentDidMount() {\n  //   if (jscookie.get(tokencookey)) {\n  //     jscookie.remove(tokencookey)\n  //   }\n  // }\n\n  toggleCreate = () => {\n    this.setState({\n      creatingAccount: !this.state.creatingAccount,\n    })\n  }\n\n  submitCreate = async (req) => {\n    this.setState({\n      loadingUser: true,\n    })\n\n    let post = await userApi.createUser(req)\n\n    if (post && !post.errorMessage) {\n      let data = await entryApi.getAllNotes()\n      sortByTimestamp(data)\n      this.setState({\n        notes: data,\n        loggedIn: true,\n        loadingUser: false,\n        creatingAccount: false,\n        loginError: false,\n        postError: false,\n      })\n    }\n    else {      \n      this.setState({\n        loggedIn: false,\n        loadingUser: false,\n        creatingAccount: false,\n        postError: true,\n      })\n    }\n  }\n\n  submitLogin = async (req) => {\n    if (!this.state.loggedIn) {\n      if (req.username === \"GUEST\") {\n        let data = await entryApi.getAllNotes()\n        sortByTimestamp(data)\n        this.setState({\n          notes: data,\n          loggedIn: true,\n          loadingUser: false,\n          user: \"anonymous\",\n        })\n      }\n      else {\n        this.setState({\n          loadingUser: true,\n        })\n        let get = await userApi.getUser(req)\n\n        if (get) {\n          // const token = generateToken()\n          // jscookie.set(tokencookey, token)\n          //let put = await userApi.updateToken          \n\n          let data = await entryApi.getAllNotes()\n          sortByTimestamp(data)\n          this.setState({\n            notes: data,\n            loadingUser: false,\n            loggedIn: true,\n            user: get.username,\n          })\n        }\n        else {\n          this.setState({\n            loginError: true,\n          })\n        }\n      }\n    }\n  }\n\n  onLogout = () => {\n    this.setState({\n      loggedIn: false,\n    })\n  }\n\n  addNoteToState = (note) => {\n    this.setState((prevState) => {\n      let newData = prevState.notes\n      newData.push(note)\n\n      return {\n        notes: newData,\n      }\n    })\n  }\n\n  removeNoteFromState = (note) => {    \n    this.setState((prevState) => {\n      let newData = prevState.notes\n      if (Date.now() - new Date(note.timestamp).getTime() < 30000) {        \n        newData = prevState.notes.filter((element) => element._id !== note._id)\n\n        return {\n          notes: newData,\n        }\n      }\n\n      newData = newData.map((element) => {\n        if (element._id === note._id) {\n          element.user = \"deleted\"\n          return element\n        }\n        else return element\n      })\n\n      return {\n        notes: newData,\n      }\n    })\n  }\n\n  render() {\n    if (this.state.loginError) {\n      window.alert(\"error logging in.\")      \n      this.setState({\n        loadingUser: false,\n        loginError: false,\n      })\n    }\n\n    if (this.state.postError) {\n      window.alert(\"error creating user.\")\n      this.setState({\n        creatingAccount: false,\n        postError: false,\n      })\n    }\n\n    if (this.state.loggedIn) {\n      return <Main        \n        user={this.state.user}\n        data={this.state.notes}\n        addNoteToState={this.addNoteToState}\n        removeNoteFromState={this.removeNoteFromState}\n        logout={this.onLogout}\n      />      \n    }\n\n    return <Login\n      onSubmit={this.submitLogin}\n      onPost={this.submitCreate}\n      createAccount={this.toggleCreate}\n      creating={this.state.creatingAccount}\n      loading={this.state.loadingUser}\n    />    \n  }\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport registerServiceWorker from \"./registerServiceWorker\"\n\nimport App from \"./containers/App.js\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\nregisterServiceWorker()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__3hnWl\",\"head\":\"style_head__3RdfS\",\"input\":\"style_input__R0zRl\",\"inputlabel\":\"style_inputlabel__3RQSj\",\"priority\":\"style_priority__XJdxv\",\"select\":\"style_select__3l2Bv\",\"charcount\":\"style_charcount__3PqTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__vkU_u\",\"body\":\"style_body__3-3dH\",\"timestamp\":\"style_timestamp__10c7u\",\"post\":\"style_post__10IpF\",\"footer\":\"style_footer__2W3Xv\",\"username\":\"style_username__isv88\"};"],"sourceRoot":""}